{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPuggQyGOCaV7SJURPWVXjg",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/YoloA11000/Metodos-Numericos/blob/main/M%C3%A9todo%20de%20Bisecci%C3%B3n\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Método de Bisección\n",
        "Usamos este método para encontrar una solución a f(x)=0 dada la función continua determinada en el intervalo [a,b], donde f(a) y f(b) tienen signos opuestos."
      ],
      "metadata": {
        "id": "1iYMEbBFTCrH"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 28,
      "metadata": {
        "id": "ytj5cDF97O7Y"
      },
      "outputs": [],
      "source": [
        "from tabulate import tabulate #Importar librerias\n",
        "\n",
        "def biseccion(f, a, b, tol, N0): #Definimos la funcion junto con las variables que vamos a ocupar\n",
        "    \"\"\"\n",
        "    Método de bisección para encontrar una raíz de f(x) en el intervalo [a, b]\n",
        "    \"\"\"\n",
        "    print (f\"f(x) = x**3 + 4*x**2 - 10\\n\")\n",
        "    print(f\"Intervalo inicial: [{a}, {b}]\\n\") #Imprimimos la funcion y el intervalo con el que vamos a trabajar\n",
        "\n",
        "    i = 1            #Inicializamos el contador de iteraciones\n",
        "    FA = f(a)\n",
        "    tabla = []\n",
        "\n",
        "    while i <= N0:\n",
        "        p = a + (b - a) / 2 #Calcula el punto medio del intervalo (Obtiene P_i))\n",
        "        FP = f(p)\n",
        "        error = abs((b - a) / 2) #Calcula el error relativo (Obtiene ε))\n",
        "\n",
        "        tabla.append([i, a, b, p, FP, error]) #Guarda los valores de las iteraciones en la tabla\n",
        "\n",
        "        if FP == 0 or error < tol:\n",
        "          print(tabulate(tabla, headers=['i', 'a_i', 'b_i', 'P_i', 'f(P_i)', 'ε'], floatfmt=\".6f\"))\n",
        "          return p, \"Procedimiento completado correctamente\" #Retorna la raiz aproximada\n",
        "\n",
        "        i+= 1             #Incrementa el contador de iteraciones\n",
        "\n",
        "        \"Determina el nuevo intervalo segun el signo de f(p)\"\n",
        "        if FA * FP > 0:\n",
        "            a = p\n",
        "            FA = FP #Actualiza FA con el nuevo valor de f(p)\n",
        "        else:\n",
        "            b = p\n",
        "\n",
        "    # Si se alcanzó el número máximo de iteraciones, muestra la tabla\"\n",
        "    print(tabulate(tabla, headers=['i', 'a_i', 'b_i', 'P_i', 'f(P_i)', 'ε'], floatfmt=\".6f\"))\n",
        "    return f, \"El método fracasó después de {N0} iteraciones.\"\n",
        "\n",
        "\n",
        ""
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def f(x):\n",
        "    return x**3 + 4*x**2 - 10\n",
        "\n",
        "# Parámetros\n",
        "a = 1\n",
        "b = 2\n",
        "tol = 1e-4\n",
        "N0 = 100\n",
        "\n",
        "# Llamada a la función de bisección\n",
        "raiz = biseccion(f, a, b, tol, N0)\n",
        "print(\"\\nRaíz aproximada:\", raiz)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HfPEC0SFes60",
        "outputId": "308ddeb5-17dc-4b8f-c561-d56c3727488b"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "f(x) = x**3 + 4*x**2 - 10\n",
            "Intervalo inicial: [1, 2]\n",
            "\n",
            "  i       a_i       b_i       P_i     f(P_i)         ε\n",
            "---  --------  --------  --------  ---------  --------\n",
            "  1  1.000000  2.000000  1.500000   2.375000  0.500000\n",
            "  2  1.000000  1.500000  1.250000  -1.796875  0.250000\n",
            "  3  1.250000  1.500000  1.375000   0.162109  0.125000\n",
            "  4  1.250000  1.375000  1.312500  -0.848389  0.062500\n",
            "  5  1.312500  1.375000  1.343750  -0.350983  0.031250\n",
            "  6  1.343750  1.375000  1.359375  -0.096409  0.015625\n",
            "  7  1.359375  1.375000  1.367188   0.032356  0.007812\n",
            "  8  1.359375  1.367188  1.363281  -0.032150  0.003906\n",
            "  9  1.363281  1.367188  1.365234   0.000072  0.001953\n",
            " 10  1.363281  1.365234  1.364258  -0.016047  0.000977\n",
            " 11  1.364258  1.365234  1.364746  -0.007989  0.000488\n",
            " 12  1.364746  1.365234  1.364990  -0.003959  0.000244\n",
            " 13  1.364990  1.365234  1.365112  -0.001944  0.000122\n",
            " 14  1.365112  1.365234  1.365173  -0.000936  0.000061\n",
            "\n",
            "Raíz aproximada: (1.36517333984375, 'Procedimiento completado correctamente')\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Puesto que f(1) = -5 y f(2) = 14, por el teorema del valor medio podemos garantizar la existencia de una raiz en [1,2]\n",
        "\n",
        "Despues de 13 interaciones, P_13 = 1.365112 se aproxima a la raiz P con un error\n",
        "\n",
        "$$\n",
        "|p - p| < |b_{14} - a_{14}| = |1.365234375 - 1.365112305| = 0.000122070.\n",
        "\\\n",
        "$$\n",
        "\n",
        "\n",
        "Ya que\n",
        "$$\n",
        "|a_{14}| < |p|\n",
        "$$\n",
        "tenemos  \n",
        "$$\n",
        "\\frac{|p - p_{13}|}{|p|} < \\frac{|b_{14} - a_{14}|}{|a_{14}|} \\leq 9.0 \\times 10^{-5}\n",
        "$$\n"
      ],
      "metadata": {
        "id": "TR9ZTjU8hSYU"
      }
    }
  ]
}